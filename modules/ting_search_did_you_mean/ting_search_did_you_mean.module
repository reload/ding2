<?php
/**
 * @file
 * Enables search integration with Ting.
 */

/**
 * Implements hook_ting_search_results().
 */
function ting_search_did_you_mean_ting_search_results($keys = NULL, $conditions = NULL, $results) {

  $messages = &drupal_static('did_you_mean_messages');

  // When a zero-hit search is executed and we're able to match "correct"
  // keys, a new search is done with the "correct" keys.
  // Then use the query-parameter original-keys to display what was done to
  // the visitor.
  $parameters = drupal_get_query_parameters();
  if (isset($parameters['original-search'])) {
    $msg = t('The search for "!original-keys" returned 0 hits. Did you mean "!keys?" which gave !num-results. The search was executed.', array(
      '!original-keys' => $parameters['original-search'],
      '!keys' => $keys,
      '!num-results' => $results->numTotalObjects,
    ));

    $messages[] = '<div class="messages warning">' . $msg . '</div>';
  }

  if ($results->numTotalObjects == 0) {
    // The search result returned zero-hits so we need to see if "correct" keys
    // can yield a better result.
    $search_result = drupal_static('ting_search_results');
    // Find suggestions for "correct" search phrase.
    $suggestion = ting_search_did_you_mean_suggest_keys($keys);

    if (!empty($suggestion)) {
      // Do secondary search for "correct" keys.
      $secondary_result = ting_search_do_secondary_search($suggestion);
      // Only redirect to "correct" keys search if it has a positive result.
      if ($secondary_result->numTotalObjects > 0) {
        $params['query'] = array(
          'original-search' => $search_result->search_key
        );
        drupal_goto('search/ting/' . strtolower($suggestion), $params);
      }
    }
  }

  if ($results->numTotalObjects <= 13) {
    $suggestion = ting_search_did_you_mean_suggest_keys($keys);
    if ($suggestion) {
      // Do aditional search.
      $suggested_result = ting_search_do_secondary_search($suggestion);
      if ($suggested_result->numTotalObjects >= 10) {

        // Set message!


        $msg = t('The search for "!keys" returned !num-results hits. Did you mean "<a href="/search/ting/!suggested-keys">!suggested-keys</a>?" which will return !suggested-num-results hits.', array(
          '!suggested-keys' => strtolower($suggestion),
          '!suggested-num-results' => $suggested_result->numTotalObjects,
          '!keys' => $keys,
          '!num-results' => $results->numTotalObjects,
        ));
        $messages[] = '<div class="messages warning">' . $msg . '</div>';
      }
    }
  }
}

/**
 * Implements hook_ting_search_set_messages().
 */
function ting_search_did_you_mean_ting_search_set_messages() {
  if (is_array(drupal_static('did_you_mean_messages'))) {
    return implode(drupal_static('did_you_mean_messages'));
  }
}

/**
 * Find the first suggestion for given keys.
 *
 * @param string $keys
 *   The original keys that you want to find suggestion for.
 *
 * @return string
 *   The suggestion.
 */
function ting_search_did_you_mean_suggest_keys($keys) {

  if (!variable_get('ting_search_autocomplete_suggestion_url', FALSE)) {
    return FALSE;
  }

  $settings = ting_search_autocomplete_settings();
  $url = variable_get('ting_search_autocomplete_suggestion_url', FALSE) . 'rest/facetSpell';

  $options['query'] = array('query' => check_plain($keys)) + $settings;
  $options['maxTime'] = 300;
  $url = url($url, $options);
  $curl = new MicroCURL();
  $headers[] = "Accept: application/json";
  $curl->set_option(CURLOPT_HTTPHEADER, $headers);
  $result = json_decode($curl->get(array($url)));
  $curl->close();

  $items = array();
  // First child of $result changes name from suggestions to suggestion when
  // switching between version 3.0 and 3.5
  if (!empty(current($result))) {
    foreach (current($result) as $suggestion) {
      return $suggestion->phrase;
    }
  }
  if (empty($items)) {
    return FALSE;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ting_search_did_you_mean_form_ting_admin_ting_settings_alter(&$form, &$form_state) {
  $form['additional_search']['#type'] = 'fieldset';
  $form['additional_search']['#title'] = t('Additional Search');
  $form['additional_search']['#tree'] = FALSE;

  $form['additional_search']['do_you_mean_guess'] = array(
    '#type' => 'radios',
    '#title' => t('Guess engine'),
    '#default_value' => variable_get('do_you_mean_guess', FALSE),
    '#options' => array(
      0 => t('KPI Index'),
      1 => t('OpenSuggestion'),
    ),
    '#description' => t('Choose the guess engine'),
  );
}