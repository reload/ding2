<?php

/**
 * @file
 * Translated search.
 */

/**
 * Implements hook_ting_search_results().
 */
function ting_search_translated_suggestion_ting_search_results($keys = NULL, $conditions = NULL, $results) {

  $messages = &drupal_static('translated_search_messages');

  // If any of fiction or non fiction is empty we cannot do the calculation.
  // Simply exit for now.
  if (empty($results->facets['facet.genreCategory']->terms['nonfiktion'])
  || empty($results->facets['facet.genreCategory']->terms['fiktion'])) {
    return;
  }
  $nonfiction = $results->facets['facet.genreCategory']->terms['nonfiktion'];
  $fiction = $results->facets['facet.genreCategory']->terms['fiktion'];

  // Less than half fiction of nonfiction.
  if (($nonfiction/2) > $fiction) {

    // Do translation
    $translated_keys = ting_search_translated_suggest_translated_keys($keys);
    $suggested_result = ting_search_do_secondary_search($translated_keys);

    if($suggested_result->numTotalObjects > $results->numTotalObjects) {
      $suggestion = $translated_keys;
      $msg = t('The search for "!keys" returned !num-results hits. Did you consider "<a href="/search/ting/!suggested-keys">!suggested-keys</a> instead?" This will return !suggested-num-results hits.', array(
        '!suggested-keys' => strtolower($suggestion),
        '!suggested-num-results' => $suggested_result->numTotalObjects,
        '!keys' => $keys,
        '!num-results' => $results->numTotalObjects,
      ));
      $messages[] = '<div class="messages warning">' . $msg . '</div>';
    }

  }
}

/**
 * Implements hook_ting_search_set_messages().
 */
function ting_search_translated_suggestion_ting_search_set_messages() {
  if (is_array(drupal_static('translated_search_messages'))) {
    return implode(drupal_static('translated_search_messages'));
  }
}

function ting_search_translated_suggest_translated_keys($keys) {
  $url = 'https://www.googleapis.com/language/translate/v2';

  $params = [];
  $params['q'] = $keys;
  $params['key'] = 'AIzaSyBNRBvwW7jr4fE5mmyNOq5vPXVHGoFI7Hc';
  $params['source'] = 'da';
  $params['target'] = 'en';

  $options['query'] = $params;
  $options['maxTime'] = 300;
  $url = url($url, $options);
  $curl = new MicroCURL();
  $headers[] = "Accept: application/json";
  $curl->set_option(CURLOPT_HTTPHEADER, $headers);
  $result = json_decode($curl->get(array($url)));
  $curl->close();

  if (!empty($result->data->translations[0]->translatedText)) {
    return $result->data->translations[0]->translatedText;
  }
}